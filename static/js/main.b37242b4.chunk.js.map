{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","assets/coronavirus.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","variant","gutterBottom","start","end","value","duration","separator","Date","toDateString","URL","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","error","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","defaults","global","defaultFontColor","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","style","defaultValue","onChange","e","target","key","App","state","fetchedData","setState","this","src","covImg","alt","image","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b37242b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return 'Loading...';\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.infected)}\n        >\n          <CardContent>\n            <Typography color=\"secondary\" variant=\"h4\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                duration={3}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of active cases of COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.recovered)}\n        >\n          <CardContent>\n            <Typography color=\"primary\" variant=\"h4\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={recovered.value}\n                duration={3}\n                separator=\".\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of recoveries from COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.deaths)}\n        >\n          <CardContent>\n            <Typography color=\"error\" variant=\"h4\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={deaths.value}\n                duration={3}\n                separator=\".\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of deaths caused by COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from 'axios';\n\nconst URL = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = URL;\n\n  if (country) {\n    changeableUrl = `${URL}/countries/${country}`;\n  }\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(changeableUrl);\n\n    const modifiedData = {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate,\n    };\n\n    return modifiedData;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${URL}/daily`);\n\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n\n    return modifiedData;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${URL}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar, defaults } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\ndefaults.global.defaultFontColor = '#F1F1F1';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map((date) => date.date),\n\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n\n            label: 'Deaths',\n            borderColor: 'red',\n\n            backgroundColor: 'rgba(255,0,0,0.5)',\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: ['Infected', 'Recovered', 'Deaths'],\n        datasets: [\n          {\n            label: 'People',\n            backgroundColor: [\n              'rgba(0,0,255,0.5)',\n              'rgba(0,255,0,0.5)',\n              'rgba(255,0,0,0.5)',\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` },\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, [fetchedCountries, setFetchedCountries]);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        style={{ color: '#FFF' }}\n        defaultValue=\"\"\n        onChange={(e) => handleCountryChange(e.target.value)}\n      >\n        <option value=\"\">Global</option>\n        {fetchedCountries.map((country) => (\n          <option key={country} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;\n","import React, { Component } from 'react';\nimport { Cards, Chart, CountryPicker } from './components';\nimport covImg from './assets/coronavirus.png';\n\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nexport class App extends Component {\n  state = {\n    data: {},\n    country: '',\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n  }\n\n  handleCountryChange = async (country) => {\n    //fetch data\n    const fetchedData = await fetchData(country);\n    //set state\n    this.setState({ data: fetchedData, country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <div className={styles.title}>\n          <img src={covImg} alt=\"coronavirus\" className={styles.image} />\n          <h1>Cov-Tracker</h1>\n        </div>\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\",\"title\":\"App_title__-GfWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\",\"option\":\"CountryPicker_option__3d4SB\"};","module.exports = __webpack_public_path__ + \"static/media/coronavirus.15e39f76.png\";"],"sourceRoot":""}